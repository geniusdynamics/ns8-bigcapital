#!/usr/bin/env python3

#
# Copyright (C) 2022 Nethesis S.r.l.
# SPDX-License-Identifier: GPL-3.0-or-later
#

import json
import sys
import agent
import secrets

# Try to parse the stdin as JSON.
# If parsing fails, output everything to stderr
data = json.load(sys.stdin)

#This is specific to you module, so you need to change it accordingly.
# we read a json stdin {"vars1":true, "var2":"foo", "vars3": 3} and we writ it to .config/state/environment
# Upper case to set environment variable and minor case to read from stdin

# Configure database configurations

MARIADB_DATABASE = data.get("MARIADB_DATABASE","bigcapitalhq")
MARIADB_USER = data.get("MARIADB_USER","bigcapital")
MARIADB_ROOT_PASSWORD = data.get("MARIADB_ROOT_PASSWORD","Bigcapital,1234")
MARIADB_AUTO_UPGRADE = data.get("MARIADB_AUTO_UPGRADE","1")
MARIADB_PASSWORD = data.get("MARIADB_PASSWORD","Bigcapital,1234")

db_config = {
    "MARIADB_DATABASE": MARIADB_DATABASE,
    "MARIADB_USER": MARIADB_USER,
    "MARIADB_ROOT_PASSWORD": f'{MARIADB_ROOT_PASSWORD}',
    "MARIADB_AUTO_UPGRADE": MARIADB_AUTO_UPGRADE,
    "MARIADB_PASSWORD": f'{MARIADB_PASSWORD}',
}
agent.write_envfile('database.env', db_config)

# Configure the application configurations
# Configure email configurations
rdb = agent.redis_connect(use_replica=True)
smtp_settings = agent.get_smarthost_settings(rdb)
# environment:
# # Mail
# - MAIL_HOST=${MAIL_HOST}
# - MAIL_USERNAME=${MAIL_USERNAME}
# - MAIL_PASSWORD=${MAIL_PASSWORD}
# - MAIL_PORT=${MAIL_PORT}
# - MAIL_SECURE=${MAIL_SECURE}
# - MAIL_FROM_NAME=${MAIL_FROM_NAME}
# - MAIL_FROM_ADDRESS=${MAIL_FROM_ADDRESS}
email_config  = {
    "MAIL_HOST": smtp_settings['host'],
    "MAIL_USERNAME": smtp_settings['username'],
    "MAIL_PASSWORD": smtp_settings['password'],
    "MAIL_PORT": smtp_settings['port'],
    "MAIL_SECURE": smtp_settings['encrypt_smtp'],
    "MAIL_FROM_NAME": data.get("MAIL_FROM_NAME", f"BigcapitalHQ {smtp_settings['username']}"),
    "MAIL_FROM_ADDRESS": data.get("MAIL_FROM_ADDRESS", f"{smtp_settings['username']}"),
}
agent.write_envfile('email.env', email_config)
# # Database
# - DB_HOST=mysql
# - DB_USER=${DB_USER}
# - DB_PASSWORD=${DB_PASSWORD}
# - DB_CHARSET=${DB_CHARSET}
# # System database
# - SYSTEM_DB_NAME=${SYSTEM_DB_NAME}
#
# # Tenants databases
# - TENANT_DB_NAME_PERFIX=${TENANT_DB_NAME_PERFIX}
#
# # Authentication
# - JWT_SECRET=${JWT_SECRET}
#
# # MongoDB
# - MONGODB_DATABASE_URL=mongodb://mongo/bigcapital
#
database_config = {
    "DB_HOST": "mysql",
    "DB_USER": MARIADB_USER,
    "DB_PASSWORD": f'{MARIADB_PASSWORD}',
    "DB_CHARSET": "utf8mb4",
    "SYSTEM_DB_HOST": f'{MARIADB_DATABASE}',
    "SYSTEM_DB_USER": MARIADB_USER,
    "SYSTEM_DB_PASSWORD": f'{MARIADB_PASSWORD}',
    "SYSTEM_DB_NAME": f'{MARIADB_DATABASE}',
    "SYSTEM_DB_CHARSET": "utf8mb4",
    "TENANT_DB_NAME_PERFIX": "tn",
    "TENANT_DB_HOST": "mysql",
    "TENANT_DB_USER": MARIADB_USER,
    "TENANT_DB_PASSWORD": f'{MARIADB_PASSWORD}',
    "TENANT_DB_CHARSET": "utf8mb4",
    "MONGODB_DATABASE_URL": "mongodb://localhost:27017/bigcapital",
}
jwt_secret = secrets.token_hex(32)
HOST = data.get("host", "")
app_config = {
    "JWT_SECRET": jwt_secret,
    "BASE_URL": HOST,
    "NEW_RELIC_APP_NAME":"BIGCAPITALHQ",
    "NEW_RELIC_DISTRIBUTED_TRACING_ENABLED": "false",
    "NEW_RELIC_LOG": "stdout",
    "NEW_RELIC_AI_MONITORING_ENABLED": "false",
    "NEW_RELIC_CUSTOM_INSIGHTS_EVENTS_MAX_SAMPLES_STORED": "1000",
    "NEW_RELIC_SPAN_EVENTS_MAX_SAMPLES_STORED": "1000",
    "NEW_RELIC_LICENSE_KEY": "",
    "GOTENBERG_URL": "http//gotenberg-app:3000",
    "GOTENBERG_DOCS_URL": "http//server:3000/public/",
    "ADMIN_EMAIL":"accounting@bigcapital.com",
    "ADMIN_PASSWORD":"BigCapital",
    **database_config,
    **email_config,
}
agent.write_envfile('app.env', app_config)
# # Application
# - BASE_URL=${BASE_URL}
#
# # Agendash
# - AGENDASH_AUTH_USER=${AGENDASH_AUTH_USER}
# - AGENDASH_AUTH_PASSWORD=${AGENDASH_AUTH_PASSWORD}
#
# # Sign-up restrictions
# - SIGNUP_DISABLED=${SIGNUP_DISABLED}
# - SIGNUP_ALLOWED_DOMAINS=${SIGNUP_ALLOWED_DOMAINS}
# - SIGNUP_ALLOWED_EMAILS=${SIGNUP_ALLOWED_EMAILS}
#
# # Sign-up email confirmation
# - SIGNUP_EMAIL_CONFIRMATION=${SIGNUP_EMAIL_CONFIRMATION}
#
# # Gotenberg (Pdf generator)
# - GOTENBERG_URL=${GOTENBERG_URL}
# - GOTENBERG_DOCS_URL=${GOTENBERG_DOCS_URL}
#
# # Exchange Rate
# - EXCHANGE_RATE_SERVICE=${EXCHANGE_RATE_SERVICE}
# - OPEN_EXCHANGE_RATE_APP_ID-${OPEN_EXCHANGE_RATE_APP_ID}
#
# # Bank Sync
# - BANKING_CONNECT=${BANKING_CONNECT}
#
# # Plaid
# - PLAID_ENV=${PLAID_ENV}
# - PLAID_CLIENT_ID=${PLAID_CLIENT_ID}
# - PLAID_SECRET=${PLAID_SECRET}
# - PLAID_LINK_WEBHOOK=${PLAID_LINK_WEBHOOK}
#
# # Lemon Squeez
# - LEMONSQUEEZY_API_KEY=${LEMONSQUEEZY_API_KEY}
# - LEMONSQUEEZY_STORE_ID=${LEMONSQUEEZY_STORE_ID}
# - LEMONSQUEEZY_WEBHOOK_SECRET=${LEMONSQUEEZY_WEBHOOK_SECRET}
# - HOSTED_ON_BIGCAPITAL_CLOUD=${HOSTED_ON_BIGCAPITAL_CLOUD}
#
# # New Relic matrics tracking.
# - NEW_RELIC_DISTRIBUTED_TRACING_ENABLED=${NEW_RELIC_DISTRIBUTED_TRACING_ENABLED}
# - NEW_RELIC_LOG=${NEW_RELIC_LOG}
# - NEW_RELIC_AI_MONITORING_ENABLED=${NEW_RELIC_AI_MONITORING_ENABLED}
# - NEW_RELIC_CUSTOM_INSIGHTS_EVENTS_MAX_SAMPLES_STORED=${NEW_RELIC_CUSTOM_INSIGHTS_EVENTS_MAX_SAMPLES_STORED}
# - NEW_RELIC_SPAN_EVENTS_MAX_SAMPLES_STORED=${NEW_RELIC_SPAN_EVENTS_MAX_SAMPLES_STORED}
# - NEW_RELIC_LICENSE_KEY=${NEW_RELIC_LICENSE_KEY}
# - NEW_RELIC_APP_NAME=${NEW_RELIC_APP_NAME}
#
# # S3
# - S3_REGION=${S3_REGION}
# - S3_ACCESS_KEY_ID=${S3_ACCESS_KEY_ID}
# - S3_SECRET_ACCESS_KEY=${S3_SECRET_ACCESS_KEY}
# - S3_ENDPOINT=${S3_ENDPOINT}
# - S3_BUCKET=${S3_BUCKET}



# Make sure everything is saved inside the environment file
# just before starting systemd unit
#agent.dump_env()
